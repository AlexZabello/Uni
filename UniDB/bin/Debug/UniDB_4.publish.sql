/*
Deployment script for Uni

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Uni"
:setvar DefaultFilePrefix "Uni"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL10_50.ALEX_SQL\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL10_50.ALEX_SQL\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[Teacher].[IX_Teacher_UserId]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [IX_Teacher_UserId]
    ON [dbo].[Teacher]([UserId] ASC);


GO
PRINT N'Creating [dbo].[vStudentList]...';


GO
CREATE VIEW [dbo].[vStudentList]
	AS
	 SELECT s.StudentId
	  ,s.FirstName
	  ,s.LastName
	  ,s.SubjectId
	  ,sb.Name as SubjectName
	  ,s.GroupId
	  ,g.Name as GroupName
	  ,t.FirstName as pFirstName
	  ,t.LastName as pLastName
FROM Student s
	JOIN [Subject] sb
	ON s.SubjectId = sb.SubjectId
	LEFT JOIN [Group] g
		JOIN Teacher t
		ON g.TeacherId = t.TeacherId
	ON s.GroupId = g.GroupId
GO
PRINT N'Altering [dbo].[StudentList]...';


GO
ALTER PROCEDURE [dbo].[StudentList]
AS
BEGIN
SELECT v.*
FROM vStudentList v
END
GO
PRINT N'Altering [dbo].[UserCheck]...';


GO
ALTER PROCEDURE [dbo].[UserCheck]
(
@Login varchar(20),
@Password varchar(20),
@UserId int OUTPUT,
@UserRoleId int = null OUTPUT
)
AS

BEGIN
	SELECT @UserRoleId = u.UserRoleId
		  ,@UserId = u.UserId
	FROM [User] as u
	WHERE 
		CAST(u.Login as varbinary(20)) = CAST(@Login as varbinary(20)) 
		AND CAST(u.Password as varbinary(20)) = CAST(@Password as varbinary(20))
	
RETURN
END
GO
PRINT N'Update complete.';


GO
